---
# Purpose:
# This playbook will set passwordless priviledges for the secondary namenode
# on the namenode, so that the secondary namenode can merge the edits and fsimage
# file regularly.

########################################################################################
# start playbook
########################################################################################

- name: set ssh passwordless privileges for 2nn->nn to facilitate fsimage edit merges
  hosts: secondary_nn
  remote_user: ansible
  become_user: root
  become: true
  become_method: sudo
  connection: ssh
  gather_facts: no

  vars_files:
    - ../local_variable_files/hadoop-vars.yml


########################################################################################
# start tasks
########################################################################################
  tasks:
  - name: Gather facts about "{{ hadoop_home }}/.ssh"
    stat:
      path: "{{ hadoop_home }}/.ssh"
    register: ssh

  - name: Gather facts about "{{ hadoop_home }}/.ssh/id_rsa"
    stat:
      path: "{{ hadoop_home }}/.ssh/id_rsa"
    register: id_rsa

  - name: Gather facts about "{{ hadoop_home }}/.ssh/id_rsa.pub"
    stat:
      path: "{{ hadoop_home }}/.ssh/id_rsa.pub"
    register: id_rsa_pub

##############

  - name: create {{ hadoop_home }}/.ssh if does not exist
    file:
      path: "{{ hadoop_home }}/.ssh"
      owner: "{{ hadoop_user_name }}"
      group: "{{ hadoop_user_group }}"
      state: directory
      mode: 0700
    when: ssh.stat.exists == "false"

  - name: ssh-keygen -v -b 2048 -t rsa -f "{{ hadoop_home }}/.ssh/id_rsa" -N '' if does not exist
    shell: ssh-keygen -v -b 2048 -t rsa -f "{{ hadoop_home }}/.ssh/id_rsa" -N '' 
    when: id_rsa.stat.exists == "false"

  - name: ensure {{ hadoop_user_name }} owns {{ hadoop_home }}/.ssh/id_rsa.pub with mode 0644
    file:
      path: "{{ hadoop_home }}/.ssh/id_rsa.pub"
      owner: "{{ hadoop_user_name }}"
      group: "{{ hadoop_user_group }}"
      mode: 0644
    when: id_rsa_pub.stat.mode != "0644" or id_rsa_pub.stat.pw_name != "{{ hadoop_user_name }}" or id_rsa_pub.stat.pw_name != "{{ hadoop_user_group }}"

  - name:  ensure {{ hadoop_user_name }} owns {{ hadoop_home }}/.ssh/id_rsa with mode 0600
    file:
      path: "{{ hadoop_home }}/.ssh/id_rsa"
      owner: "{{ hadoop_user_name }}"
      group: "{{ hadoop_user_group }}"
      mode: 0600
    when: id_rsa_pub.stat.mode != "0600" or id_rsa_pub.stat.pw_name != "{{ hadoop_user_name }}" or id_rsa_pub.stat.pw_name != "{{ hadoop_user_group }}"

##############

  - name: apt-get install python-pexpect
    apt:
      name: python-pexpect
      state: present
      update_cache: yes

  - name: ssh-copy-id {{ hadoop_name_node }}
    become_user: "{{ hadoop_user_name }}"
    become: true
    become_method: sudo
    expect:
      command: ssh-copy-id {{ hadoop_name_node }}
      responses:
        (?i)\(yes/no\)\?: "yes"
        (?i)password: "{{ hadoop_user_pwd }}"
