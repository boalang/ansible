---

- name: Install Drupal using roles provided by geerlingguy
  hosts: drupal
  remote_user: ansible
  become_user: root
  become: true
  become_method: sudo 
  connection: ssh
  gather_facts: yes

  vars:
    apache_web_root: /var/www
    boa_web_root: "{{ apache_web_root }}/boa"
    db_su: drupal
    db_su_pw: drupal
# hadoop version needed for the hadoop-vars.yml file
# otherwise have the version written to a file or passed via paramaters
# from the hadoop install scripts
    hadoop_version: 1.2.1

# this is provided for the first couple tasks
# this currently imports the hadoop 1 hadoop-vars.yml file, ie. version 1.2.1
# update accordingly for a different version
  vars_files:
    - ../hadoop1-playbooks/local_variable_files/hadoop-vars.yml

# roles from:  https://galaxy.ansible.com/geerlingguy
  roles:
    - ./roles/geerlingguy.apache

    - ./roles/geerlingguy.mysql

    - ./roles/geerlingguy.php

    - ./roles/geerlingguy.php-mysql

#    - ./roles/geerlingguy.git

#    - ./roles/geerlingguy.composer

#    - ./roles/geerlingguy.drush

#    - ./roles/geerlingguy.drupal

  tasks:
# this needs to be added for apache to provide download to user
  - name: echo "export HADOOP_CONF_DIR={{ hadoop_conf_dir }}" >> /etc/apache2/envvars
    shell: echo "export HADOOP_CONF_DIR={{ hadoop_conf_dir }}" >> /etc/apache2/envvars

  - name: systemctl restart apache2
    shell: systemctl restart apache2

# add directories and symlinks in /home/hadoop
  - name: create /home/hadoop/hadoop-current
    file:
      path: "{{ hadoop_user_home }}/hadoop-current"
      state: directory
      mode: 0755
      owner: "{{ hadoop_user_name }}"
      group: "{{ hadoop_user_group }}"
      recurse: yes

# add a symlink to the bin in the current hadoop install
  - name: ln -s {{ hadoop_install }}/bin {{ hadoop_user_home }}/hadoop-current/bin
    file:
      src: "{{ hadoop_install }}/bin"
      dest: "{{ hadoop_user_home }}/hadoop-current/bin"
      owner: "{{ hadoop_user_name }}"
      group: "{{ hadoop_user_group }}"
      state: link
      force: yes

  - name: apt-get install drush
    apt:
      name: drush
      state: present

  - name: cd {{ apache_web_root }}; drush dl drupal-7.x
    shell: cd {{ apache_web_root }}; drush dl drupal-7.x
# chdir is not working
#    args:
#      chdir: "{{ apache_web_root }}"

  - name: mv {{ apache_web_root }}/drupal-7.x-dev {{ boa_web_root }}
    shell: mv {{ apache_web_root }}/drupal-7.x-dev {{ boa_web_root }}

# this needs to run before drush site-install, as drush needs to use settings.php
  - name:  cp default.settings.php to settings.php
    copy:
      src: "{{ boa_web_root }}/sites/default/default.settings.php"
      dest: "{{ boa_web_root }}/sites/default/settings.php"
      owner: ansible
      group: ansible
      mode: 0666

  - name: create {{ boa_web_root }}/sites/default/files
    file:
      path: "{{ boa_web_root }}/sites/default/files"
      owner: ansible
      group: ansible
      state: directory
      mode: 0777
      recurse: yes

  - name: create {{ boa_web_root }}/sites/all/modules/boa
    file:
      path: "{{ boa_web_root }}/sites/all/modules/boa"
      owner: ansible
      group: ansible
      state: directory
      mode: 0775
      recurse: yes

  - name:  'https://github.com/boalang/drupal.git'
    git:
      repo: 'https://github.com/boalang/drupal.git'
      dest: "{{ boa_web_root }}/sites/all/modules/boa"
      version: master
      force: yes

  - name: cd {{ boa_web_root }}; echo "y" | drush site-install standard --db-url=mysql://{{ db_su }}:{{ db_su_pw }}@localhost:3306/drupal install_configure_form.enable_update_status_emails=NULL --db-su={{ db_su }} --db-su-pw={{ db_su_pw }} --account-name=boa --account-pass=rocks --site-name=boa
    shell: cd {{ boa_web_root }}; echo "y" | drush site-install standard --db-url=mysql://{{ db_su }}:{{ db_su_pw }}@localhost:3306/drupal install_configure_form.enable_update_status_emails=NULL --db-su={{ db_su }} --db-su-pw={{ db_su_pw }} --account-name=boa --account-pass=rocks --site-name=boa
#    args:
#      chdir: "{{ boa_web_root }}"

#  - name: echo "y" | drush site-install standard --db-url=mysql://{{ db_su }}@127.0.0.1:3306/drupal install_configure_form.enable_update_status_emails=NULL --db-su={{ db_su }} --account-name=boa --account-pass=rocks --site-name=boa
#    shell: echo "y" | drush site-install standard --db-url=mysql://{{ db_su }}@127.0.0.1:3306/drupal install_configure_form.enable_update_status_emails=NULL --db-su={{ db_su }} --account-name=boa --account-pass=rocks --site-name=boa
#    args:
#      chdir: "{{ boa_web_root }}"

#  - name: echo "y" | drush site-install standard --db-url=mysql://{{ db_su }}@localhost:3306/drupal=useSSL=true install_configure_form.enable_update_status_emails=NULL --db-su={{ db_su }} --account-name=boa --account-pass=rocks --site-name=boa
#    shell: echo "y" | drush site-install standard --db-url=mysql://{{ db_su }}@localhost:3306/drupal?useSSL=true install_configure_form.enable_update_status_emails=NULL --db-su={{ db_su }} --account-name=boa --account-pass=rocks --site-name=boa
#    args:
#      chdir: "{{ boa_web_root }}"

  - name: echo "y" | drush en boa
    args:
      chdir: "{{ boa_web_root }}"
    shell: echo "y" | drush en boa
    
  - name: apt-get install -y npm
    apt:
      name: npm
      state: present
      update_cache: yes

  - name: apt-get install nodejs-legacy
    apt:
      name: nodejs-legacy
      state: present
      update_cache: no

  - name: create /tmp/ace-related/ace
    file:
      path: /tmp/ace-related/ace
      state: directory
      mode: 0755
      recurse: yes

  - name: create /tmp/ace-related/ace-builds
    file:
      path: /tmp/ace-related/ace-builds
      state: directory
      mode: 0755
      recurse: yes

  - name:  'https://github.com/boalang/ace.git'
    git:
      repo: 'https://github.com/boalang/ace.git'
      dest: /tmp/ace-related/ace
      version: master
      force: yes

  - name:  'https://github.com/ajaxorg/ace-builds.git'
    git:
      repo: 'https://github.com/ajaxorg/ace-builds.git'
      dest: /tmp/ace-related/ace-builds
      version: master
      force: yes

  - name: cd /tmp/ace-related/ace; npm install
    args:
      chdir: /tmp/ace-related/ace
    shell: npm install

  - name: cd /tmp/ace-related/ace; node ./Makefile.dryice.js full --target ../ace-builds
    args:
      chdir: /tmp/ace-related/ace
    shell: node /tmp/ace-related/ace/Makefile.dryice.js full --target /tmp/ace-related/ace-builds

  - name: mv /tmp/ace-related/ace-builds {{ boa_web_root }}/sites/all/libraries
    shell: mv /tmp/ace-related/ace-builds "{{ boa_web_root }}/sites/all/libraries/ace"

  - name:  chmod -r 0755 {{ boa_web_root }}/sites/all/libraries directories
    file:
      path: "{{ boa_web_root }}/sites/all/libraries"
      state: directory
      mode: 0755

  - name: make sure ansible is the owner of all {{ boa_web_root }} files
    file:
      path: "{{ boa_web_root }}"
      group: ansible
      owner: ansible
      recurse: yes

  - include: ../local_includes/delete-ansible-tmp-files.yml
